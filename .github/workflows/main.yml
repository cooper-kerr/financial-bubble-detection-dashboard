name: Daily Yahoo Finance Bubble Update

on:
  schedule:
    - cron: '30 21 * * *'  # 21:30 UTC daily
  workflow_dispatch:

jobs:
  scrape-and-process:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy yfinance scipy fredapi matplotlib

      - name: Run CSV scraper & generate MAT files
        run: |
          python scripts/YF-Data-Scraper.py
          python scripts/sbub_run.py
        env:
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}

      - name: Upload MAT files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mat-files
          path: data/mat/*.mat

      - name: Download MAT files for JSON conversion
        uses: actions/download-artifact@v4
        with:
          name: mat-files
          path: data/mat  # download back to this folder

      - name: Convert MAT to JSON
        run: |
          mkdir -public/data
          python scripts/bubble_estimator.py  # your converter script
        env:
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}

      - name: Upload JSON files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: json-files
          path: public/data/*.json

      - name: Upload JSON to Vercel Blob
        run: |
          export BLOB_READ_WRITE_TOKEN=${{ secrets.BLOB_READ_WRITE_TOKEN }}
          bun run scripts/upload-data.js
        env:
          BLOB_READ_WRITE_TOKEN: ${{ secrets.BLOB_READ_WRITE_TOKEN }}

      # 7️⃣ Commit CSV/JSON updates back to repo (optional)
      - name: Commit small CSV/JSON updates
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain data/csv data/json)" ]]; then
            git add data/csv public/data
            git commit -m "Automated CSV/JSON update: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push
            echo "✅ CSV/JSON updates committed and pushed."
          else
            echo "⚠️ No changes detected in CSV/JSON — skipping commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
